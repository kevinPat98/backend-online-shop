type Mutation {
  """
  Registro del usuario, para poder administrar
  la información de la tienda como **ADMIN** o como cliente (**CLIENT**)
  que desea comprar videojuegos
  """
  register(
    """
    Información del usuario que vamos a usar para realizar el registro
    Añadiremos la información que deberemos de comprobar dentro del **UserInput** para
    saber que debemos de añadir en el parámetro
    """
    user: UserInput!
  ): ResultUser
  """
  Para actualizar la información del usuario especificado y así tener ña información
  actualizada a nuestro gusto
  """
  updateUser(
    """
    Información del usuario que vamos a usar para realizar el registro
    Añadiremos la información que deberemos de comprobar dentro del **UserInput** para
    saber que debemos de añadir en el parámetro
    """
    user: UserInput!
  ): ResultUser
  """
  Para borrar el usuario. Esta acción no la usaremos, en su lugar para
  hacer desaparecer un item correcto, usaremos la función de bloquear
  """
  deleteUser("ID único del usuario que queremos eliminar" id: ID!): ResultUser
  """
  Para bloquear (desactivar) el usuario y clasificarlo como "inactivo", con el que no podrá
  realizar compras, no podrá acceder a su información principal y demás
  """
  blockUser(
    "ID único del usuario que queremos eliminar"
    id: ID!,
    "Argumento para especificar si queremos bloquear o desbloquear"
    unblock: Boolean = false,
    "Especificar la procedencia de la petición para la modificación"
    admin: Boolean = false): ResultUser
  "Acción donde vamos a añadir el género introducido"
  addGenre(
    """
    Nombre del género que vamos a añadir. Con este valor crearemos
    el slug siguiendo este formato.
    Por ejemplo: "genre = Action Shooter" => slug = action-shooter
    """
    genre: String!
  ): ResultGenre
  """
  Para actualizar la información del género especificado con el ID
  y así tener ña información actualizada a nuestro gusto con el
  nuevo género
  """
  updateGenre(
    "ID único del género que queremos actualizar"
    id: ID!
    "Nombre del género con el que vamos a actualizar"
    genre: String!
  ): ResultGenre
  """
  Para borrar el género. Esta acción no la usaremos, en su lugar para
  hacer desaparecer un item correcto, usaremos la función de bloquear
  """
  deleteGenre("ID único del género que queremos eliminar" id: ID!): ResultGenre
  """
  Para bloquear (desactivar) el género y clasificarlo como "inactivo" y
  no poder utilizarlo
  """
  blockGenre(id: ID!): ResultGenre
  """
  Acción donde vamos a añadir el tag introducido, seguirá la estructura
  de los géneros
  """
  
  sendEmail(mail: MailInput!): ResultMail
  """
  Acción que permitirá enviar al usuario seleccionado la información necesaria
  para poder activar el usuario, añadiendo su fecha de nacimiento y su password
  ya que esta acción se va a utilizar cuando creamos el usuario desde el panel
  de administración.
  """
  activeUserEmail(id: ID!, email: String!): ResultMail
  """
  Acción en el que el usuario que tiene que activar el usuario añadiendo
  su fecha de nacimiento y un nuevo password, para poder acceder a las
  compras y otras opciones
  """
  activeUserAction(id: ID!, birthday: String!, password: String!): ResultMail
  """
  Acción para hacer la petición del cambio de password de un usuario existente
  en la base de datos con el objetivo de resetear y añadir la nueva información.
  El cambio de la contraseña se dará por el olvido de ella o simplemente por querer hacer un cambio a una más segura
  """
  resetPassword(
    "Email del usuario que queremos cambiarle el password"
    email: String!
  ): ResultMail
  """
  Acción para cambiar la información del password del usuario que pasamos
  con su **id** de usuario, ya que hemos solicitado anteriormente desde
  **resetPassword(<email>)** las instrucciones para el cambio de la contraseña
  por el olvido de ella o simplemente por querer hacer un cambio a una más segura
  """
  changePassword(id: ID!, password: String!): ResultUser
}
